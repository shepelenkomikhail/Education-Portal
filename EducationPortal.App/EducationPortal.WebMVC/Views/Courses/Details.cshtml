@model WebMVC.Models.CourseDetailsModel

@{
    ViewData["Title"] = Model.Name;
}

@Html.AntiForgeryToken()

<div class="container-fluid">
    <div class="row">
        <!-- Course Overview Section -->
        <div class="col-12 mb-4">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h2 class="mb-0">@Model.Name</h2>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-8">
                            <h5>Description</h5>
                            <p class="text-muted">@Model.Description</p>
                            
                            <h5 class="mt-4">Skills</h5>
                            @if (Model.Skills.Any())
                            {
                                <div class="d-flex flex-wrap gap-2">
                                    @foreach (var skill in Model.Skills)
                                    {
                                        <span class="badge bg-secondary">@skill.Name</span>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No skills assigned to this course.</p>
                            }
                        </div>
                        <div class="col-md-4">
                            <h5>Materials Summary</h5>
                            <div class="list-group">
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    Books
                                    <span class="badge bg-primary rounded-pill">@Model.Books.Count</span>
                                </div>
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    Videos
                                    <span class="badge bg-success rounded-pill">@Model.Videos.Count</span>
                                </div>
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    Articles
                                    <span class="badge bg-info rounded-pill">@Model.Articles.Count</span>
                                </div>
                            </div>

                            @if (User.Identity.IsAuthenticated)
                            {
                                <div class="mt-4">
                                    @if (Model.IsUserEnrolled)
                                    {
                                        <div class="card">
                                            <div class="card-header bg-success text-white">
                                                <i class="fas fa-graduation-cap me-2"></i>Course Progress
                                            </div>
                                            <div class="card-body">
                                                <div class="mb-3">
                                                    <div class="d-flex justify-content-between mb-1">
                                                        <span>Progress</span>
                                                        <span id="progressText">@Model.CompletionPercentage%</span>
                                                    </div>
                                                    <div class="progress" style="height: 20px;">
                                                        <div id="progressBar" class="progress-bar bg-success" role="progressbar"
                                                             style="width: @Model.CompletionPercentage%"
                                                             aria-valuenow="@Model.CompletionPercentage"
                                                             aria-valuemin="0" aria-valuemax="100">
                                                        </div>
                                                    </div>
                                                </div>
                                                @if (Model.CompletionPercentage == 100)
                                                {
                                                    <div class="alert alert-success mb-0" role="alert">
                                                        <i class="fas fa-trophy me-2"></i>Congratulations! You've completed this course!
                                                    </div>
                                                }
                                                else
                                                {
                                                    <small class="text-muted">Complete all materials to finish the course</small>
                                                }
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <button id="enrollBtn" class="btn btn-primary btn-lg w-100" onclick="enrollInCourse(@Model.Id)">
                                            <i class="fas fa-user-plus me-2"></i>Enroll in Course
                                        </button>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="mt-4">
                                    <div class="alert alert-info" role="alert">
                                        <i class="fas fa-info-circle me-2"></i>
                                        <a asp-area="Identity" asp-page="/Account/Login" class="alert-link">Login</a> to enroll in this course
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Materials Accordion -->
        <div class="col-md-6">
            <div class="accordion" id="materialsAccordion">
                <!-- Books Section -->
                <div class="accordion-item">
                    <h2 class="accordion-header" id="booksHeader">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" 
                                data-bs-target="#booksCollapse" aria-expanded="false" aria-controls="booksCollapse">
                            <i class="fas fa-book me-2"></i>Books (@Model.Books.Count)
                        </button>
                    </h2>
                    <div id="booksCollapse" class="accordion-collapse collapse" aria-labelledby="booksHeader" 
                         data-bs-parent="#materialsAccordion">
                        <div class="accordion-body">
                            @if (Model.Books.Any())
                            {
                                <div class="list-group">
                                    @foreach (var book in Model.Books)
                                    {
                                        var isCompleted = Model.CompletedMaterialIds.Contains(book.Id);
                                        <div class="list-group-item material-item @(isCompleted ? "list-group-item-success" : "")"
                                             data-material-type="book" data-material-id="@book.Id">
                                            <div class="d-flex w-100 justify-content-between align-items-start">
                                                <div class="flex-grow-1" style="cursor: pointer;" onclick="loadMaterialDetails('book', @book.Id)">
                                                    <div class="d-flex justify-content-between">
                                                        <h6 class="mb-1">@book.Title</h6>
                                                        <small>@book.Author</small>
                                                    </div>
                                                    <p class="mb-1">@book.PageAmount pages â€¢ @book.Formant</p>
                                                    <small>Published: @book.PublicationDate.ToString("MMM yyyy")</small>
                                                </div>
                                                @if (Model.IsUserEnrolled)
                                                {
                                                    <div class="ms-3">
                                                        @if (isCompleted)
                                                        {
                                                            <span class="badge bg-success">
                                                                <i class="fas fa-check"></i> Completed
                                                            </span>
                                                        }
                                                        else
                                                        {
                                                            <button class="btn btn-sm btn-outline-success mark-complete-btn"
                                                                    onclick="markMaterialCompleted(@Model.Id, @book.Id, this)">
                                                                <i class="fas fa-check"></i> Mark Complete
                                                            </button>
                                                        }
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No books available for this course.</p>
                            }
                        </div>
                    </div>
                </div>

                <!-- Videos Section -->
                <div class="accordion-item">
                    <h2 class="accordion-header" id="videosHeader">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" 
                                data-bs-target="#videosCollapse" aria-expanded="false" aria-controls="videosCollapse">
                            <i class="fas fa-video me-2"></i>Videos (@Model.Videos.Count)
                        </button>
                    </h2>
                    <div id="videosCollapse" class="accordion-collapse collapse" aria-labelledby="videosHeader" 
                         data-bs-parent="#materialsAccordion">
                        <div class="accordion-body">
                            @if (Model.Videos.Any())
                            {
                                <div class="list-group">
                                    @foreach (var video in Model.Videos)
                                    {
                                        var isCompleted = Model.CompletedMaterialIds.Contains(video.Id);
                                        <div class="list-group-item material-item @(isCompleted ? "list-group-item-success" : "")"
                                             data-material-type="video" data-material-id="@video.Id">
                                            <div class="d-flex w-100 justify-content-between align-items-start">
                                                <div class="flex-grow-1" style="cursor: pointer;" onclick="loadMaterialDetails('video', @video.Id)">
                                                    <div class="d-flex justify-content-between">
                                                        <h6 class="mb-1">@video.Title</h6>
                                                        <small>@video.Duration min</small>
                                                    </div>
                                                    <p class="mb-1">Quality: @video.Quality</p>
                                                </div>
                                                @if (Model.IsUserEnrolled)
                                                {
                                                    <div class="ms-3">
                                                        @if (isCompleted)
                                                        {
                                                            <span class="badge bg-success">
                                                                <i class="fas fa-check"></i> Completed
                                                            </span>
                                                        }
                                                        else
                                                        {
                                                            <button class="btn btn-sm btn-outline-success mark-complete-btn"
                                                                    onclick="markMaterialCompleted(@Model.Id, @video.Id, this)">
                                                                <i class="fas fa-check"></i> Mark Complete
                                                            </button>
                                                        }
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No videos available for this course.</p>
                            }
                        </div>
                    </div>
                </div>

                <!-- Articles Section -->
                <div class="accordion-item">
                    <h2 class="accordion-header" id="articlesHeader">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" 
                                data-bs-target="#articlesCollapse" aria-expanded="false" aria-controls="articlesCollapse">
                            <i class="fas fa-file-alt me-2"></i>Articles (@Model.Articles.Count)
                        </button>
                    </h2>
                    <div id="articlesCollapse" class="accordion-collapse collapse" aria-labelledby="articlesHeader" 
                         data-bs-parent="#materialsAccordion">
                        <div class="accordion-body">
                            @if (Model.Articles.Any())
                            {
                                <div class="list-group">
                                    @foreach (var article in Model.Articles)
                                    {
                                        var isCompleted = Model.CompletedMaterialIds.Contains(article.Id);
                                        <div class="list-group-item material-item @(isCompleted ? "list-group-item-success" : "")"
                                             data-material-type="article" data-material-id="@article.Id">
                                            <div class="d-flex w-100 justify-content-between align-items-start">
                                                <div class="flex-grow-1" style="cursor: pointer;" onclick="loadMaterialDetails('article', @article.Id)">
                                                    <div class="d-flex justify-content-between">
                                                        <h6 class="mb-1">@article.Title</h6>
                                                        <small>@article.Date.ToString("MMM yyyy")</small>
                                                    </div>
                                                    <p class="mb-1">@article.Resource</p>
                                                </div>
                                                @if (Model.IsUserEnrolled)
                                                {
                                                    <div class="ms-3">
                                                        @if (isCompleted)
                                                        {
                                                            <span class="badge bg-success">
                                                                <i class="fas fa-check"></i> Completed
                                                            </span>
                                                        }
                                                        else
                                                        {
                                                            <button class="btn btn-sm btn-outline-success mark-complete-btn"
                                                                    onclick="markMaterialCompleted(@Model.Id, @article.Id, this)">
                                                                <i class="fas fa-check"></i> Mark Complete
                                                            </button>
                                                        }
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No articles available for this course.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Material Details Panel -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Material Details</h5>
                </div>
                <div class="card-body" id="materialDetailsPanel">
                    <div class="text-center text-muted">
                        <i class="fas fa-hand-pointer fa-3x mb-3"></i>
                        <p>Select a material from the accordion to view its details</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Back Button -->
    <div class="row mt-4">
        <div class="col-12">
            <a asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-arrow-left me-2"></i>Back to Courses
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.material-item [onclick*="loadMaterialDetails"]').forEach(el => {
            el.addEventListener('click', function(e) {
                e.stopPropagation();
                const materialItem = this.closest('.material-item');
                const materialType = materialItem.dataset.materialType;
                const materialId = materialItem.dataset.materialId;
                document.querySelectorAll('.material-item').forEach(mi => mi.classList.remove('active'));
                materialItem.classList.add('active');
                loadMaterialDetails(materialType, materialId);
            });
        });
    });

    function loadMaterialDetails(materialType, materialId) {
        const url = '@Url.Action("GetMaterialDetails", "Courses")' + `?materialType=${encodeURIComponent(materialType)}&materialId=${encodeURIComponent(materialId)}`;
        
        fetch(url)
            .then(response => response.text())
            .then(data => {
                document.getElementById('materialDetailsPanel').innerHTML = data;
            })
            .catch(() => {
                document.getElementById('materialDetailsPanel').innerHTML = '<div class="alert alert-danger">Error loading material details.</div>';
            });
    }

    function enrollInCourse(courseId) {
        const enrollBtn = document.getElementById('enrollBtn');
        const originalText = enrollBtn.innerHTML;

        enrollBtn.disabled = true;
        enrollBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Enrolling...';

        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
        fetch('@Url.Action("Enroll", "Courses")', {
            method: 'POST',
            headers: { 
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: `id=${courseId}&__RequestVerificationToken=${encodeURIComponent(token)}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                enrollBtn.parentNode.innerHTML = `<div class="alert alert-success" role="alert"><i class="fas fa-check-circle me-2"></i>${data.message}</div>`;
            } else {
                alert('Error: ' + data.message);
                enrollBtn.disabled = false;
                enrollBtn.innerHTML = originalText;
            }
        })
        .catch(() => {
            alert('An error occurred while enrolling in the course. Please try again.');
            enrollBtn.disabled = false;
            enrollBtn.innerHTML = originalText;
        });
    }

    function markMaterialCompleted(courseId, materialId, button) {
        const btn = button;
        const originalText = btn.innerHTML;

        btn.disabled = true;
        btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Marking...';

        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
        fetch('@Url.Action("MarkMaterialCompleted", "Courses")', {
            method: 'POST',
            headers: { 
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: `courseId=${courseId}&materialId=${materialId}&__RequestVerificationToken=${encodeURIComponent(token)}`
        })
        .then(response => {
            console.log('MarkMaterialCompleted Response status:', response.status);
            console.log('MarkMaterialCompleted Response headers:', response.headers);
            
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            
            return response.json();
        })
        .then(data => {
            console.log('MarkMaterialCompleted Response data:', data);
            if (data && data.success) {
                const parent = btn.parentElement;
                parent.innerHTML = '<span class="badge bg-success"><i class="fas fa-check"></i> Completed</span>';
                
                const materialItem = btn.closest('.material-item');
                if (materialItem) {
                    materialItem.classList.add('list-group-item-success');
                }
                
                if (data.newProgress !== undefined) {
                    updateProgressBar(data.newProgress);
                }
                
                showToast('success', data.message);
            } else {
                showToast('error', data.message);
                btn.disabled = false;
                btn.innerHTML = originalText;
            }
        })
        .catch(error => {
            console.error('MarkMaterialCompleted Error:', error);
            showToast('error', 'An error occurred while marking the material as completed.');
            btn.disabled = false;
            btn.innerHTML = originalText;
        });
    }

    function updateProgressBar(newProgress) {
        const progressBar = document.getElementById('progressBar');
        const progressText = document.getElementById('progressText');

        if (progressBar && progressText) {
            progressBar.style.width = newProgress + '%';
            progressBar.setAttribute('aria-valuenow', newProgress);
            progressText.textContent = newProgress + '%';

            if (newProgress === 100) {
                progressBar.classList.remove('bg-success');
                progressBar.classList.add('bg-warning');
                showToast('success', 'ðŸŽ‰ Congratulations! You\'ve completed this course and earned new skills!');
                setTimeout(() => {
                    progressBar.classList.add('animate__animated', 'animate__pulse');
                }, 500);
            }
        }
    }

    function showToast(type, message) {
        const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
        const toast = document.createElement('div');
        toast.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
        toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
        toast.setAttribute('role', 'alert');
        toast.innerHTML = `
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        `;
        document.body.appendChild(toast);
        
        setTimeout(() => {
            if (toast && toast.parentNode) {
                toast.remove();
            }
        }, 5000);

    
        const closeBtn = toast.querySelector('.btn-close');
        if (closeBtn) {
            closeBtn.addEventListener('click', () => {
                if (toast && toast.parentNode) {
                    toast.remove();
                }
            });
        }
    }
    </script>
}